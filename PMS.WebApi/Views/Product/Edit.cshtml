@using System
@using System.Collections.Generic
@model PMS.Xam.ViewModel.ProductViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Put", "api/Product"))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
            @Html.LabelFor(model => model.ProductType, new {@class = "control-label col-md-2"})
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.ProductType.Id, (IEnumerable<SelectListItem>) ViewBag.ProductTypeSelectList, "Select a Type")

                @Html.ValidationMessageFor(model => model.ProductType, "", new {@class = "text-danger"})
            </div>
            @Html.LabelFor(model => model.Year, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new {htmlAttributes = new {@class = "form-control", @min = 1902, @max = @DateTime.Now.Year + 1, @Value = ""}})
                @Html.ValidationMessageFor(model => model.Year, "", new {@class = "text-danger"})
            </div>
            @Html.LabelFor(model => model.Colour, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Colour.Id, (IEnumerable<SelectListItem>) ViewBag.ColourSelectList, "Select a Colour")
                @Html.ValidationMessageFor(model => model.Colour, "", new {@class = "text-danger"})
            </div>
            @Html.LabelFor(model => model.Conditions, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.ConditionInts, (MultiSelectList) ViewBag.ConditionMultiSelectList, new {multiple = "multiple"})
                @Html.ValidationMessageFor(model => model.Conditions, "", new {@class = "text-danger"})
            </div>
            @Html.LabelFor(model => model.Tags, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.TagInts, (MultiSelectList) ViewBag.TagMultiSelectList, new {multiple = "multiple"})
                @Html.ValidationMessageFor(model => model.Tags, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}